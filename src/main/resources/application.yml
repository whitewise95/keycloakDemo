#spring:
#  security:
#    oauth2:
#      resourceserver:
#        jwt:
#          issuer-uri: https://lemoncare-dev.lemonhc.com/oidc/realms/partners
#          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
#          jwt-role-attribute: roles

#spring:
#  security:
#    oauth2:
#      resourceserver:
#        jwt:
#          issuer-uri: http://localhost:8090/realms/myrealm
#          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs


spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/keycloak
    username: keycloak_user
    password: keycloak_password
    hikari:
      connectionTimeout: 10000 # 클라이언트가 커넥션풀에서 연결을 기다리는 최대 시간
      maximumPoolSize: 5 # 유휴(idle), 활성화(active) 상태 모두 포함하여 커넥션풀의 최대 크기
  jpa:
    database: postgresql
    open-in-view: false
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        query:
          fail_on_pagination_over_collection_fetch: true #collection 을 fetch 할때 페이징 처리하게 된다면 오류
        format_sql: true
        jdbc:
          batch_size: 1000
        order_inserts: true
        order_updates: true
        default_batch_fetch_size: 100
        highlight_sql: true

keycloak:
  auth-server-url: http://localhost:8090/realms/myrealm
  realm: myrealm
  resource: myclient
  credentials:
    secret: 9LV6DMb1NVwNzspeuLoK4xKRjN8xmATU
  principal-attribute: preferred_username
  bearer-only: true